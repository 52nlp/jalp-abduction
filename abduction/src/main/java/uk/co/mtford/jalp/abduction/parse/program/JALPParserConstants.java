/* Generated By:JavaCC: Do not edit this line. JALPParserConstants.java */
package uk.co.mtford.jalp.abduction.parse.program;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface JALPParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LBRACKET = 5;
  /** RegularExpression Id. */
  int RBRACKET = 6;
  /** RegularExpression Id. */
  int DEFINES = 7;
  /** RegularExpression Id. */
  int COMMA = 8;
  /** RegularExpression Id. */
  int DOT = 9;
  /** RegularExpression Id. */
  int EQUALS = 10;
  /** RegularExpression Id. */
  int LESSTHAN = 11;
  /** RegularExpression Id. */
  int LESSTHANEQ = 12;
  /** RegularExpression Id. */
  int GREATERTHAN = 13;
  /** RegularExpression Id. */
  int GREATERTHANEQ = 14;
  /** RegularExpression Id. */
  int LSQBRACKET = 15;
  /** RegularExpression Id. */
  int RSQBRACKET = 16;
  /** RegularExpression Id. */
  int NOT = 17;
  /** RegularExpression Id. */
  int IC = 18;
  /** RegularExpression Id. */
  int IN = 19;
  /** RegularExpression Id. */
  int ABDUCIBLE = 20;
  /** RegularExpression Id. */
  int INTEGER = 21;
  /** RegularExpression Id. */
  int LCASENAME = 22;
  /** RegularExpression Id. */
  int UCASENAME = 23;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"(\"",
    "\")\"",
    "\":-\"",
    "\",\"",
    "\".\"",
    "\"=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"[\"",
    "\"]\"",
    "\"not\"",
    "\"ic\"",
    "\"in\"",
    "\"abducible\"",
    "<INTEGER>",
    "<LCASENAME>",
    "<UCASENAME>",
  };

}
